//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace citiAppSystem.Modules.Models.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class citiAppDatabaseEntities : DbContext
    {
        public citiAppDatabaseEntities()
            : base("name=citiAppDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccDelTable> AccDelTables { get; set; }
        public virtual DbSet<arrivalTable> arrivalTables { get; set; }
        public virtual DbSet<branch> branches { get; set; }
        public virtual DbSet<brand> brands { get; set; }
        public virtual DbSet<c_TransTable> c_TransTable { get; set; }
        public virtual DbSet<ChangesLog> ChangesLogs { get; set; }
        public virtual DbSet<collection> collections { get; set; }
        public virtual DbSet<collection_details> collection_details { get; set; }
        public virtual DbSet<companyProfile> companyProfiles { get; set; }
        public virtual DbSet<customerTable> customerTables { get; set; }
        public virtual DbSet<deliveryReceipt> deliveryReceipts { get; set; }
        public virtual DbSet<DR_details> DR_details { get; set; }
        public virtual DbSet<freeProduct> freeProducts { get; set; }
        public virtual DbSet<model> models { get; set; }
        public virtual DbSet<OF_Table> OF_Table { get; set; }
        public virtual DbSet<poDetail> poDetails { get; set; }
        public virtual DbSet<productList> productLists { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<purchaseOrder> purchaseOrders { get; set; }
        public virtual DbSet<st_requisitionTable> st_requisitionTable { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<transferTable> transferTables { get; set; }
        public virtual DbSet<user> users { get; set; }
    
        public virtual ObjectResult<Collection_REPORTS_Result> Collection_REPORTS(string drAcountNo)
        {
            var drAcountNoParameter = drAcountNo != null ?
                new ObjectParameter("drAcountNo", drAcountNo) :
                new ObjectParameter("drAcountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Collection_REPORTS_Result>("Collection_REPORTS", drAcountNoParameter);
        }
    
        public virtual ObjectResult<CollectionReportByAccountNo_Result> CollectionReportByAccountNo(string accountNo)
        {
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("accountNo", accountNo) :
                new ObjectParameter("accountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CollectionReportByAccountNo_Result>("CollectionReportByAccountNo", accountNoParameter);
        }
    
        public virtual ObjectResult<customerByEmployer_Result> customerByEmployer(string employer)
        {
            var employerParameter = employer != null ?
                new ObjectParameter("employer", employer) :
                new ObjectParameter("employer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<customerByEmployer_Result>("customerByEmployer", employerParameter);
        }
    
        public virtual ObjectResult<customerById_Result> customerById(string idNo)
        {
            var idNoParameter = idNo != null ?
                new ObjectParameter("idNo", idNo) :
                new ObjectParameter("idNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<customerById_Result>("customerById", idNoParameter);
        }
    
        public virtual ObjectResult<CustomerList_Result> CustomerList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerList_Result>("CustomerList");
        }
    
        public virtual ObjectResult<NewSelectCommandDR_REPORTBYACCOUNT_Result> NewSelectCommandDR_REPORTBYACCOUNT(string accountNo)
        {
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("accountNo", accountNo) :
                new ObjectParameter("accountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewSelectCommandDR_REPORTBYACCOUNT_Result>("NewSelectCommandDR_REPORTBYACCOUNT", accountNoParameter);
        }
    
        public virtual ObjectResult<POViewByPONumber_Result> POViewByPONumber(string poNumber)
        {
            var poNumberParameter = poNumber != null ?
                new ObjectParameter("poNumber", poNumber) :
                new ObjectParameter("poNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<POViewByPONumber_Result>("POViewByPONumber", poNumberParameter);
        }
    
        public virtual ObjectResult<ReceiptQuery_Result> ReceiptQuery(string oRNO)
        {
            var oRNOParameter = oRNO != null ?
                new ObjectParameter("oRNO", oRNO) :
                new ObjectParameter("oRNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptQuery_Result>("ReceiptQuery", oRNOParameter);
        }
    
        public virtual ObjectResult<SELECTCOLLECTIONS_Result> SELECTCOLLECTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECTCOLLECTIONS_Result>("SELECTCOLLECTIONS");
        }
    
        public virtual ObjectResult<SelectProductByBrand_Result> SelectProductByBrand(string brand)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProductByBrand_Result>("SelectProductByBrand", brandParameter);
        }
    
        public virtual ObjectResult<SelectProducts_Result> SelectProducts(string brand)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProducts_Result>("SelectProducts", brandParameter);
        }
    
        public virtual ObjectResult<SelectQueryByEmployer_Result> SelectQueryByEmployer(string employer)
        {
            var employerParameter = employer != null ?
                new ObjectParameter("employer", employer) :
                new ObjectParameter("employer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectQueryByEmployer_Result>("SelectQueryByEmployer", employerParameter);
        }
    
        public virtual ObjectResult<SelectQueryLedgerReportByAccount_Result> SelectQueryLedgerReportByAccount(string drAcountNo)
        {
            var drAcountNoParameter = drAcountNo != null ?
                new ObjectParameter("drAcountNo", drAcountNo) :
                new ObjectParameter("drAcountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectQueryLedgerReportByAccount_Result>("SelectQueryLedgerReportByAccount", drAcountNoParameter);
        }
    
        public virtual ObjectResult<SelectQueryLedgerReportsAccountNo_Result> SelectQueryLedgerReportsAccountNo(string drAcountNo)
        {
            var drAcountNoParameter = drAcountNo != null ?
                new ObjectParameter("drAcountNo", drAcountNo) :
                new ObjectParameter("drAcountNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectQueryLedgerReportsAccountNo_Result>("SelectQueryLedgerReportsAccountNo", drAcountNoParameter);
        }
    
        public virtual ObjectResult<selectQueryReceiptByOR_Result> selectQueryReceiptByOR(string oRNO)
        {
            var oRNOParameter = oRNO != null ?
                new ObjectParameter("oRNO", oRNO) :
                new ObjectParameter("oRNO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectQueryReceiptByOR_Result>("selectQueryReceiptByOR", oRNOParameter);
        }
    
        public virtual int UpdateDescriptionByStockNo(string description, string stockNo)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var stockNoParameter = stockNo != null ?
                new ObjectParameter("stockNo", stockNo) :
                new ObjectParameter("stockNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDescriptionByStockNo", descriptionParameter, stockNoParameter);
        }
    }
}
